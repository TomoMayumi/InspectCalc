<UserControl x:Class="InspectCalc.Views.Controls.InspectControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:InspectCalc.Views.Controls"
             xmlns:vm="clr-namespace:InspectCalc.ViewModels.Controls"
             xmlns:m="clr-namespace:InspectCalc.Models.Controls"
             xmlns:vmrc="clr-namespace:InspectCalc.ViewModels.Resources"
             xmlns:mrc="clr-namespace:InspectCalc.Models.Resources"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance vm:InspectViewModel}"
             d:DesignHeight="600" d:DesignWidth="800"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <vmrc:EnumToBooleanConverter x:Key="EnumToBoolean" />
            <BooleanToVisibilityConverter x:Key="BoolVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="C" Command="{Binding ExecuteClearCommand}"/>
        <KeyBinding Key="D1" Command="{Binding ExecuteSetCommand}" CommandParameter="Val1"/>
        <KeyBinding Key="D2" Command="{Binding ExecuteSetCommand}" CommandParameter="Val2"/>
        <KeyBinding Key="D3" Command="{Binding ExecuteSetCommand}" CommandParameter="Val3"/>
        <KeyBinding Key="D4" Command="{Binding ExecuteSetCommand}" CommandParameter="Val4"/>
        <KeyBinding Key="D5" Command="{Binding ExecuteSetCommand}" CommandParameter="Val5"/>
        <KeyBinding Key="D6" Command="{Binding ExecuteSetCommand}" CommandParameter="Val6"/>
        <KeyBinding Key="D7" Command="{Binding ExecuteSetCommand}" CommandParameter="Val7"/>
        <KeyBinding Key="D8" Command="{Binding ExecuteSetCommand}" CommandParameter="Val8"/>
        <KeyBinding Key="NumPad1" Command="{Binding ExecuteSetCommand}" CommandParameter="Val1"/>
        <KeyBinding Key="NumPad2" Command="{Binding ExecuteSetCommand}" CommandParameter="Val2"/>
        <KeyBinding Key="NumPad3" Command="{Binding ExecuteSetCommand}" CommandParameter="Val3"/>
        <KeyBinding Key="NumPad4" Command="{Binding ExecuteSetCommand}" CommandParameter="Val4"/>
        <KeyBinding Key="NumPad5" Command="{Binding ExecuteSetCommand}" CommandParameter="Val5"/>
        <KeyBinding Key="NumPad6" Command="{Binding ExecuteSetCommand}" CommandParameter="Val6"/>
        <KeyBinding Key="NumPad7" Command="{Binding ExecuteSetCommand}" CommandParameter="Val7"/>
        <KeyBinding Key="NumPad8" Command="{Binding ExecuteSetCommand}" CommandParameter="Val8"/>
    </UserControl.InputBindings>

    <StackPanel>
        <TextBlock Text="{Binding InspectModel.TopSentence}" />
        <ListView 
            d:DataContext="{d:DesignInstance mrc:Question}"
            ItemsSource="{Binding Questions}"
            MaxHeight="500"
            AlternationCount="2"
            >
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.AlternationIndex" Value="0" />
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#fff0f0ff" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Resources>
                <Style x:Key="answerValStyle" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Answer}" Value="0">
                            <Setter Property="Background" Value="Pink"/>
                        </DataTrigger>
                        <Trigger Property="Text" Value="0">
                            <Setter Property="Foreground" Value="#fee"/>
                        </Trigger>
                        <Trigger Property="Text" Value="1">
                            <Setter Property="Foreground" Value="#fcc"/>
                        </Trigger>
                        <Trigger Property="Text" Value="2">
                            <Setter Property="Foreground" Value="#faa"/>
                        </Trigger>
                        <Trigger Property="Text" Value="3">
                            <Setter Property="Foreground" Value="#f88"/>
                        </Trigger>
                        <Trigger Property="Text" Value="4">
                            <Setter Property="Foreground" Value="#f66"/>
                        </Trigger>
                        <Trigger Property="Text" Value="5">
                            <Setter Property="Foreground" Value="#f44"/>
                        </Trigger>
                        <Trigger Property="Text" Value="6">
                            <Setter Property="Foreground" Value="#f22"/>
                        </Trigger>
                        <Trigger Property="Text" Value="7">
                            <Setter Property="Foreground" Value="#f00"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView x:Name="Grid">
                    <GridView.Columns>
                        <GridViewColumn Header="点数" Width="30">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Score}" Style="{StaticResource answerValStyle}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="No." Width="30" DisplayMemberBinding="{Binding Index}"/>
                        <GridViewColumn Header="質問" Width="300">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Sentence}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="{Binding ChoicesColWidths[0]}">
                            <GridViewColumn.Header>
                                <TextBlock Text="{Binding Choices[0]}" TextWrapping="Wrap" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="{Binding Index}" IsChecked="{Binding Path=Answer,Mode=TwoWay,Converter={StaticResource EnumToBoolean},ConverterParameter=Val1,UpdateSourceTrigger=PropertyChanged}" Command="{Binding DataContext.ExecuteCalcCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="{Binding ChoicesColWidths[1]}">
                            <GridViewColumn.Header>
                                <TextBlock Text="{Binding Choices[1]}" TextWrapping="Wrap" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="{Binding Index}" IsChecked="{Binding Path=Answer,Mode=TwoWay,Converter={StaticResource EnumToBoolean},ConverterParameter=Val2,UpdateSourceTrigger=PropertyChanged}" Command="{Binding DataContext.ExecuteCalcCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="{Binding ChoicesColWidths[2]}">
                            <GridViewColumn.Header>
                                <TextBlock Text="{Binding Choices[2]}" TextWrapping="Wrap" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="{Binding Index}" IsChecked="{Binding Path=Answer,Mode=TwoWay,Converter={StaticResource EnumToBoolean},ConverterParameter=Val3,UpdateSourceTrigger=PropertyChanged}" Command="{Binding DataContext.ExecuteCalcCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="{Binding ChoicesColWidths[3]}">
                            <GridViewColumn.Header>
                                <TextBlock Text="{Binding Choices[3]}" TextWrapping="Wrap" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="{Binding Index}" IsChecked="{Binding Path=Answer,Mode=TwoWay,Converter={StaticResource EnumToBoolean},ConverterParameter=Val4,UpdateSourceTrigger=PropertyChanged}" Command="{Binding DataContext.ExecuteCalcCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="{Binding ChoicesColWidths[4]}">
                            <GridViewColumn.Header>
                                <TextBlock Text="{Binding Choices[4]}" TextWrapping="Wrap" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="{Binding Index}" IsChecked="{Binding Path=Answer,Mode=TwoWay,Converter={StaticResource EnumToBoolean},ConverterParameter=Val5,UpdateSourceTrigger=PropertyChanged}" Command="{Binding DataContext.ExecuteCalcCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="{Binding ChoicesColWidths[5]}">
                            <GridViewColumn.Header>
                                <TextBlock Text="{Binding Choices[5]}" TextWrapping="Wrap" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="{Binding Index}" IsChecked="{Binding Path=Answer,Mode=TwoWay,Converter={StaticResource EnumToBoolean},ConverterParameter=Val6,UpdateSourceTrigger=PropertyChanged}" Command="{Binding DataContext.ExecuteCalcCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="{Binding ChoicesColWidths[6]}">
                            <GridViewColumn.Header>
                                <TextBlock Text="{Binding Choices[6]}" TextWrapping="Wrap" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="{Binding Index}" IsChecked="{Binding Path=Answer,Mode=TwoWay,Converter={StaticResource EnumToBoolean},ConverterParameter=Val7,UpdateSourceTrigger=PropertyChanged}" Command="{Binding DataContext.ExecuteCalcCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="{Binding ChoicesColWidths[7]}">
                            <GridViewColumn.Header>
                                <TextBlock Text="{Binding Choices[7]}" TextWrapping="Wrap" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="{Binding Index}" IsChecked="{Binding Path=Answer,Mode=TwoWay,Converter={StaticResource EnumToBoolean},ConverterParameter=Val8,UpdateSourceTrigger=PropertyChanged}" Command="{Binding DataContext.ExecuteCalcCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Name="summary" Width="400" HorizontalAlignment="Right">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="AUTO"></RowDefinition>
                <RowDefinition Height="AUTO"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="4" Foreground="Red" Visibility="{Binding HasAnyBlank,Converter={StaticResource BoolVisibilityConverter}}">！未入力あり</TextBlock>
            <Button Grid.Row="1" Grid.Column="0" Command="{Binding ExecuteClearCommand}">クリア</Button>
            <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right">点数：</TextBlock>
            <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding EvalVal}" IsReadOnly="True"></TextBox>
            <TextBlock Grid.Row="1" Grid.Column="3" HorizontalAlignment="Right">判定：</TextBlock>
            <TextBox Grid.Row="1" Grid.Column="4" Text="{Binding EvalRank}" IsReadOnly="True"></TextBox>

            <Slider Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5"
                    Margin="0"
                    Value="{Binding EvalVal}"
                    Maximum="{Binding InspectModel.RankRangeUpper}"
                    Minimum="{Binding InspectModel.RankRangeLower}"
                    TickPlacement="Both"
                    TickFrequency="10"
                    IsEnabled="False"
                    />
            <local:StackedBarChart Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5" Margin="0" ItemsText="{Binding InspectModel.RankStrings}" ItemsWidth="{Binding InspectModel.RankWidthsInt}" />
        </Grid>
    </StackPanel>
</UserControl>
